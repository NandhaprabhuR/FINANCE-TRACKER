plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.example.ft"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion
    aaptOptions {
        noCompress 'tflite'
        noCompress 'lite'
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    // Load the key.properties file
    def keyProperties = new Properties()
    def keyPropertiesFile = rootProject.file('key.properties')
    if (keyPropertiesFile.exists()) {
        keyProperties.load(new FileInputStream(keyPropertiesFile))
    }

    // Add signing configuration
    signingConfigs {
        release {
            keyAlias keyProperties['keyAlias']
            keyPassword keyProperties['keyPassword']
            storeFile keyProperties['storeFile'] ? file(keyProperties['storeFile']) : null
            storePassword keyProperties['storePassword']
        }
    }

    defaultConfig {
        applicationId = "com.example.ft"
        minSdk = 23
        targetSdk = 35  // Updated to 35
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source = "../.."
}